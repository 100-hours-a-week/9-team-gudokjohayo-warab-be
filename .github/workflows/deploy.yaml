name: Deploy Spring Boot App

on:
    push:
        branches:
            - main
            - dev

env:
    IMAGE_NAME: warab-be
    AWS_REGION: ap-northeast-2

jobs:
    deploy:
        runs-on: ubuntu-latest

        permissions:
            contents: write

        steps:
            - name: Checkout warab-be
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Log in to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v2

            - name: Generate application-secrets.properties
              run: |
                  mkdir -p src/main/resources
                  cat <<EOF > src/main/resources/application-secrets.properties
                  spring.database.id=${{ secrets.SPRING_DATABASE_ID }}
                  # 추가 시크릿은 여기에 작성
                  EOF

            - name: Determine environment
              id: env
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "env=prod" >> $GITHUB_OUTPUT
                  else
                    echo "env=dev" >> $GITHUB_OUTPUT
                  fi

            - name: Build and push Docker image (ARM64)
              run: |
                  docker buildx build \
                    --platform linux/arm64 \
                    -t ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ steps.env.outputs.env }} \
                    --push .

            - name: Checkout warab-deploy
              uses: actions/checkout@v3
              with:
                  repository: your-username/warab-deploy
                  token: ${{ secrets.DEPLOY_REPO_PAT }}
                  path: deploy

            - name: Update patch-deployment.yaml
              run: |
                  sed -i "s|image:.*|image: ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ steps.env.outputs.env }}|" \
                    deploy/k8s/overlays/${{ steps.env.outputs.env }}/patch-deployment.yaml

            - name: Commit & push to warab-deploy
              run: |
                  cd deploy
                  git config user.name "github-actions"
                  git config user.email "actions@github.com"
                  git add k8s/overlays/${{ steps.env.outputs.env }}/patch-deployment.yaml
                  git commit -m "chore: update image tag for ${{ steps.env.outputs.env }} - ${{ github.sha }}"
                  git push

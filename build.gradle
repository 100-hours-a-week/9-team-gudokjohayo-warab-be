plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.22.0' // Spotless 플러그인 추가
}

spotless {
	java {
		target 'src/**/*.java' // Java 코드 대상
		googleJavaFormat() // Google Java 스타일 적용
		removeUnusedImports() // 사용하지 않는 import 자동 제거
		trimTrailingWhitespace() // 불필요한 공백 제거
		endWithNewline() // 파일 끝 개행 유지
	}
}



group = 'gudokjohayo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Core Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JSON Support (LocalDateTime 처리)
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// 비동기 API 호출을 위한 WebClient (필요하면)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Logging
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// PostgreSQL Driver
	runtimeOnly 'org.postgresql:postgresql'

	// DevTools (개발용)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Configuration Processor (설정 자동완성 지원)
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('copyGitHooks', Copy) {
	from file('.githooks')
	into file('.git/hooks')
	fileMode 0755
}

tasks.named('compileJava').configure {
	dependsOn tasks.named('copyGitHooks')
}

